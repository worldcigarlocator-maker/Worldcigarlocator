// ==========================
// Sidebar.js ‚Äì Komplett version
// ==========================

// Initiera Supabase
const supabaseUrl = "https://gbxxoeplkzbhsvagnfsr.supabase.co";
const supabaseKey = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImdieHhvZXBsa3piaHN2YWduZnNyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc2NjQ1MDAsImV4cCI6MjA3MzI0MDUwMH0.E4Vk-GyLe22vyyfRy05hZtf4t5w_Bd_B-tkEFZ1alT4";
const supabase = window.supabase.createClient(supabaseUrl, supabaseKey);
// ==========================
// Sidebar.js ‚Äì version med stores_with_city
// ==========================

// Statisk struktur (v√§rldsdelar + l√§nder som alltid syns)
const structure = {
  "Europe": ["Sweden", "Spain", "Germany", "France", "Norway", "Denmark", "Finland", "Italy"],
  "North America": ["USA", "Canada", "Mexico"],
  "South America": ["Brazil", "Argentina", "Chile"],
  "Asia": ["Japan", "China", "India"],
  "Africa": ["South Africa", "Egypt", "Morocco"],
  "Oceania": ["Australia", "New Zealand"]
};

// Flag-emoji (kan ers√§ttas med bilder)
const flags = {
  "Sweden": "üá∏üá™", "Spain": "üá™üá∏", "Germany": "üá©üá™", "France": "üá´üá∑",
  "Norway": "üá≥üá¥", "Denmark": "üá©üá∞", "Finland": "üá´üáÆ", "Italy": "üáÆüáπ",
  "USA": "üá∫üá∏", "Canada": "üá®üá¶", "Mexico": "üá≤üáΩ",
  "Brazil": "üáßüá∑", "Argentina": "üá¶üá∑", "Chile": "üá®üá±",
  "Japan": "üáØüáµ", "China": "üá®üá≥", "India": "üáÆüá≥",
  "South Africa": "üáøüá¶", "Egypt": "üá™üá¨", "Morocco": "üá≤üá¶",
  "Australia": "üá¶üá∫", "New Zealand": "üá≥üáø"
};

async function buildSidebar() {
  const sidebar = document.getElementById("sidebarContent");
  if (!sidebar) return;

  // H√§mta butiker + stad + land + kontinent fr√•n vyn
  const { data: stores, error } = await supabase
    .from("stores_with_city")
    .select("store_id, store_name, city_name, country, continent");

  if (error) {
    console.error("Supabase error:", error);
    return;
  }

  // R√§kna st√§der och l√§nder
  const cityCounts = {};
  const countryCounts = {};

  stores.forEach(s => {
    if (!s.city_name || !s.country || !s.continent) return;

    // Stad
    const cityKey = `${s.continent}-${s.country}-${s.city_name}`;
    cityCounts[cityKey] = (cityCounts[cityKey] || 0) + 1;

    // Land
    const countryKey = `${s.continent}-${s.country}`;
    countryCounts[countryKey] = (countryCounts[countryKey] || 0) + 1;
  });

  // Rendera kontinenter
  Object.keys(structure).forEach(continent => {
    const contLi = document.createElement("li");
    contLi.classList.add("continent");

    const contBtn = document.createElement("button");
    contBtn.classList.add("toggle");
    contBtn.innerHTML = `<span>${continent}</span><span class="arrow">‚ñ∫</span>`;

    const countriesUl = document.createElement("ul");
    countriesUl.classList.add("nested");

    contBtn.addEventListener("click", () => {
      countriesUl.classList.toggle("active");
      contBtn.querySelector(".arrow").textContent =
        countriesUl.classList.contains("active") ? "‚ñº" : "‚ñ∫";
    });

    // Rendera l√§nder under kontinenten
    structure[continent].forEach(country => {
      const countryLi = document.createElement("li");
      countryLi.classList.add("country");

      const countryKey = `${continent}-${country}`;
      const count = countryCounts[countryKey] || 0;

      const countryBtn = document.createElement("button");
      countryBtn.classList.add("toggle");
      countryBtn.innerHTML = `
        <span class="flag">${flags[country] || ""}</span>
        <span>${country}</span>
        <span class="count">(${count})</span>
        <span class="arrow">‚ñ∫</span>
      `;

      const citiesUl = document.createElement("ul");
      citiesUl.classList.add("nested");

      countryBtn.addEventListener("click", () => {
        citiesUl.classList.toggle("active");
        countryBtn.querySelector(".arrow").textContent =
          citiesUl.classList.contains("active") ? "‚ñº" : "‚ñ∫";
      });

      // L√§gg till st√§der dynamiskt fr√•n stores_with_city
      const cityMap = {};
      stores.forEach(s => {
        if (s.country === country && s.continent === continent) {
          cityMap[s.city_name] = (cityMap[s.city_name] || 0) + 1;
        }
      });

      Object.keys(cityMap).sort().forEach(city => {
        const cityLi = document.createElement("li");
        const cityLink = document.createElement("a");
        cityLink.href = `city.html?city=${encodeURIComponent(city)}`;
        cityLink.textContent = `${city} (${cityMap[city]})`;
        cityLi.appendChild(cityLink);
        citiesUl.appendChild(cityLi);
      });

      countryLi.appendChild(countryBtn);
      countryLi.appendChild(citiesUl);
      countriesUl.appendChild(countryLi);
    });

    contLi.appendChild(contBtn);
    contLi.appendChild(countriesUl);
    sidebar.appendChild(contLi);
  });
}

// Initiera n√§r sidan laddats
document.addEventListener("DOMContentLoaded", buildSidebar);
