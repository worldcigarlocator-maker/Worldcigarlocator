<!-- Backoffice Home Final v2.1 | Bugfix: store_count + status_check | 2025-10-14 -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8"/>
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Backoffice — Home (Final v2.1)</title>
  <script type="module" src="https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2/+esm"></script>
  <style>
    :root{
      --primary:#2f78c4; --primary-dark:#2466a8;
      --success:#1d8348; --warning:#b36e00; --danger:#c0392b;
      --bg:#f5f6f8; --card:#fff; --text:#1f2937; --muted:#6b7280; --border:#e5e7eb;
      --gold:#b8860b;
      --base-font:10.5px; --radius:10px; --gap:.6rem; --pad:.65rem; --shadow:0 1px 3px rgba(0,0,0,.06);
    }
    *{box-sizing:border-box}
    body{font-family:Arial, Helvetica, sans-serif;background:var(--bg);margin:0;padding:1.1rem;color:var(--text);font-size:var(--base-font);line-height:1.35}
    h1{text-align:center;margin:0 0 .9rem;font-weight:800;color:#2b2b2b;font-size:1.35rem}
    .top-bar{display:flex;justify-content:center;align-items:center;gap:.4rem;flex-wrap:wrap;margin-bottom:.9rem}
    .top-bar button{
      background:#fff;border:1.4px solid var(--primary);color:var(--primary);
      padding:.34rem .55rem;border-radius:7px;font-weight:800;cursor:pointer;font-size:.92rem
    }
    .top-bar button:hover{background:var(--primary);color:#fff}
    .top-bar button.active{background:var(--primary);color:#fff;border-color:transparent}
    .top-bar .add{border-color:#6c757d;color:#1f2937}
    .top-bar .add:hover{background:#1f2937;color:#fff}
    .meta-row{text-align:center;color:var(--muted);margin-bottom:.6rem;font-size:.95rem}
    .grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(290px,1fr));gap:var(--gap)}
    .card{background:var(--card);border:1px solid var(--border);border-radius:var(--radius);box-shadow:var(--shadow);display:flex;flex-direction:column;overflow:hidden}
    .thumb{width:100%;height:160px;object-fit:cover;background:#f3f4f6}
    .card-content{padding:var(--pad);flex:1}
    .badges{display:flex;gap:.35rem;flex-wrap:wrap;margin:0 0 .35rem}
    .badge{display:inline-block;padding:.2rem .55rem;border-radius:999px;font-size:.85rem;font-weight:800;color:#fff}
    .badge.store{background:#007bff}
    .badge.lounge{background:#28a745}
    .badge.other{background:#ff8c00}
    .badge.flag{background:#c0392b}
    .rating{color:var(--gold);margin-top:.25rem;font-weight:800}
    .small{color:var(--muted);font-size:.9rem}
    .btn-row{display:flex;gap:.4rem;padding:0 var(--pad) var(--pad)}
    .btn{flex:1;background:#fff;border:1.4px solid var(--primary);color:var(--primary);
      padding:.42rem .55rem;border-radius:7px;font-weight:800;cursor:pointer;font-size:.92rem;text-align:center}
    .btn:hover{background:var(--primary);color:#fff}
    .btn.approve{border-color:var(--success);color:var(--success)}
    .btn.approve:hover{background:var(--success);color:#fff}
    .btn.flag{border-color:#ff8c00;color:#ff8c00}
    .btn.flag:hover{background:#ff8c00;color:#fff}
    .btn.delete{border-color:var(--danger);color:var(--danger)}
    .btn.delete:hover{background:var(--danger);color:#fff}
    .btn.restore{border-color:var(--success);color:var(--success)}
    .btn.restore:hover{background:var(--success);color:#fff}
    #toast-container{position:fixed;bottom:1rem;right:1rem;display:flex;flex-direction:column;gap:.45rem;z-index:9999}
    .toast{background:#333;color:#fff;padding:.6rem .9rem;border-radius:8px}
    .toast.success{background:var(--success)}.toast.error{background:var(--danger)}
  </style>
</head>
<body>
  <h1>Backoffice — Home</h1>
  <div class="top-bar">
    <button class="active" data-view="home">Home</button>
    <button data-view="approved">Approved</button>
    <button data-view="pending">Pending</button>
    <button data-view="flagged">Flagged</button>
    <button data-view="trash">Trash</button>
    <button onclick="window.location.href='backoffice-business-analytics-final.html'">Business</button>
    <button class="add" id="addStoreBtn">+ Add Store</button>
  </div>

  <div class="meta-row" id="metaRow"></div>
  <div class="grid" id="storeGrid"></div>
  <div id="toast-container"></div>

  <script type="module">
    import { createClient } from "https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2/+esm";
    const supabase = createClient(
      "https://gbxxoeplkzbhsvagnfsr.supabase.co",
      "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImdieHhvZXBsa3piaHN2YWduZnNyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc2NjQ1MDAsImV4cCI6MjA3MzI0MDUwMH0.E4Vk-GyLe22vyyfRy05hZtf4t5w_Bd_B-tkEFZ1alT4"
    );

    const grid=document.getElementById("storeGrid");
    const meta=document.getElementById("metaRow");
    let current="home";

    document.querySelectorAll(".top-bar button[data-view]").forEach(b=>{
      b.addEventListener("click",()=>{
        document.querySelectorAll(".top-bar button").forEach(x=>x.classList.remove("active"));
        b.classList.add("active");
        loadView(b.dataset.view);
      });
    });

    loadView("home");

    async function loadView(view){
      current=view; grid.innerHTML=""; meta.textContent="";
      let q=supabase.from("stores").select("*").order("created_at",{ascending:false});
      if(view==="approved")q=q.eq("approved",true);
      if(view==="pending")q=q.eq("approved",false);
      if(view==="flagged")q=q.eq("flagged",true);
      if(view==="trash")q=q.eq("status","deleted");
      const {data,error}=await q;
      if(error)return showToast(error.message,"error");
      if(!data?.length){grid.innerHTML="<p>No stores found</p>";return;}
      data.forEach(renderCard);
    }

    function renderCard(s){
      const c=document.createElement("div");
      c.className="card";
      c.innerHTML=`
        <img class="thumb" src="${s.photo_reference||'images/store.jpg'}" alt="">
        <div class="card-content">
          <h3>${s.name}</h3>
          <div class="small">${s.city||''}, ${s.country||''}</div>
          <div class="small">${s.address||''}</div>
          <div class="rating">${"★".repeat(s.rating||0)}${"☆".repeat(5-(s.rating||0))}</div>
        </div>
      `;
      const row=document.createElement("div");row.className="btn-row";
      row.innerHTML=`
        <button class="btn approve">Approve</button>
        <button class="btn flag">${s.flagged?"Unflag":"Flag"}</button>
        <button class="btn delete">Delete</button>
      `;
      row.querySelector(".approve").onclick=()=>approveStore(s.id);
      row.querySelector(".flag").onclick=()=>toggleFlag(s.id,s.flagged);
      row.querySelector(".delete").onclick=()=>softDelete(s.id);
      c.appendChild(row);
      grid.appendChild(c);
    }

    /* --- Geo counters --- */
    async function incContinent(continent){
      if(!continent)return;
      const {data}=await supabase.from("continents").select("id,store_count").eq("name",continent).maybeSingle();
      if(data){await supabase.from("continents").update({store_count:(data.store_count||0)+1}).eq("id",data.id);}
      else await supabase.from("continents").insert({name:continent,store_count:1});
    }
    async function incCountry(country,continent){
      if(!country)return;
      const {data}=await supabase.from("countries").select("id,store_count,continent").eq("name",country).maybeSingle();
      if(data){
        await supabase.from("countries").update({store_count:(data.store_count||0)+1,continent:data.continent||continent||null}).eq("id",data.id);
      }else await supabase.from("countries").insert({name:country,continent:continent||null,store_count:1});
    }
    async function incCity(city,country){
      if(!city||!country)return;
      const {data}=await supabase.from("cities").select("id,store_count").eq("name",city).eq("country",country).maybeSingle();
      if(data)await supabase.from("cities").update({store_count:(data.store_count||0)+1}).eq("id",data.id);
      else await supabase.from("cities").insert({name:city,country,store_count:1});
    }

    /* --- Actions --- */
    async function approveStore(id){
      const {error:upErr}=await supabase.from("stores").update({approved:true,approved_at:new Date().toISOString(),status:"approved"}).eq("id",id);
      if(upErr){console.error(upErr);return showToast(upErr.message,"error");}
      const {data:s}=await supabase.from("stores").select("continent,country,city").eq("id",id).single();
      if(s){await incContinent(s.continent);await incCountry(s.country,s.continent);await incCity(s.city,s.country);}
      showToast("Approved & linked","success");
      setTimeout(()=>loadView(current),400);
    }

    async function toggleFlag(id,flagged){
      const {error}=await supabase.from("stores").update({flagged:!flagged}).eq("id",id);
      if(error)return showToast(error.message,"error");
      showToast(flagged?"Unflagged":"Flagged","success");
      setTimeout(()=>loadView(current),400);
    }

    async function softDelete(id){
      const delUntil=new Date(Date.now()+48*60*60*1000).toISOString();
      const {error}=await supabase.from("stores").update({status:"deleted",deleted_until:delUntil}).eq("id",id);
      if(error)return showToast(error.message,"error");
      showToast("Moved to Trash","success");
      setTimeout(()=>loadView(current),400);
    }

    /* --- Add Store simplified --- */
    document.getElementById("addStoreBtn").onclick=async()=>{
      const name=prompt("Store name:");
      if(!name)return;
      const country=prompt("Country:");
      const city=prompt("City:");
      const {error}=await supabase.from("stores").insert([{
        name,
        country:country||"Unknown",
        city:city||"Unknown",
        approved:false,
        status:"pending"
      }]);
      if(error){console.error(error);return showToast(error.message,"error");}
      showToast("Store added","success");
      setTimeout(()=>loadView("home"),400);
    }

    function showToast(msg,type="success"){
      const c=document.getElementById("toast-container");
      const t=document.createElement("div");
      t.className=`toast ${type}`;t.textContent=msg;c.appendChild(t);
      setTimeout(()=>t.remove(),2600);
    }
  </script>
</body>
</html>
