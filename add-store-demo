<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Add Store</title>

  <!-- Google Maps Web Components -->
  <script src="https://unpkg.com/@googlemaps/extended-component-library"></script>

  <style>
    body {
      font-family: Arial, sans-serif;
      background: #f8f8f8;
      margin: 0;
      padding: 2rem;
      display: flex;
      justify-content: center;
    }
    .form-wrapper {
      background: #fff;
      padding: 2rem;
      border-radius: 12px;
      box-shadow: 0 4px 10px rgba(0,0,0,0.1);
      max-width: 600px;
      width: 100%;
    }
    h1.gold-heading {
      text-align: center;
      color: #b8860b;
      margin-bottom: 1.5rem;
    }
    h2.gold-heading { color: #b8860b; margin: 1rem 0 0.5rem; }
    h2.black-heading { color: #333; margin: 1rem 0 0.5rem; }

    label { font-weight: bold; display: block; margin-bottom: 0.4rem; }
    input[type="text"] {
      width: 100%; padding: 0.6rem; border: 1px solid #ccc;
      border-radius: 6px; font-size: 1rem; box-sizing: border-box;
    }
    gmpx-place-autocomplete {
      display: block; width: 100%; padding: 0.6rem;
      border: 1px solid #ccc; border-radius: 6px;
      font-size: 1rem; margin-bottom: 1rem; box-sizing: border-box;
    }
    .radio-group { display: flex; gap: 1rem; margin-top: 0.5rem; }
    .radio-group input[type="radio"] { display: none; }
    .badge {
      padding: 0.4rem 1rem; border-radius: 20px;
      font-size: 0.9rem; border: 2px solid transparent;
      cursor: pointer; transition: all 0.2s;
    }
    .badge.store { border-color: #007bff; color: #007bff; }
    .radio-group input[type="radio"]:checked + .store { background:#007bff; color:#fff; }
    .badge.lounge { border-color: #28a745; color: #28a745; }
    .radio-group input[type="radio"]:checked + .lounge { background:#28a745; color:#fff; }
    .badge.other { border-color: #ff8c00; color: #ff8c00; }
    .radio-group input[type="radio"]:checked + .other { background:#ff8c00; color:#fff; }

    .rating { display: flex; gap: 0.5rem; }
    .star {
      font-size: 2rem; cursor: pointer; color: #ccc; transition: color 0.2s;
    }
    .star.hover { color: #daa520; }
    .star.selected { color: #b8860b; }

    #preview img { max-width: 100%; border-radius: 6px; margin-top: 0.5rem; }

    button {
      margin-top: 1.5rem; width: 100%; padding: 0.9rem;
      background: #b8860b; color: #fff; font-size: 1rem;
      border: none; border-radius: 8px; cursor: pointer;
      font-weight: bold; transition: background 0.2s;
    }
    button:hover { background: #a37408; }

    #toast-container {
      position: fixed; bottom: 1rem; right: 1rem;
      display: flex; flex-direction: column; gap: 0.5rem;
    }
    .toast {
      background: #333; color: #fff; padding: 0.8rem 1.2rem;
      border-radius: 8px; box-shadow: 0 2px 6px rgba(0,0,0,0.2);
      opacity: 0.95;
    }
    .toast.success { background: #28a745; }
    .toast.error { background: #dc3545; }
  </style>
</head>
<body>
  <div class="form-wrapper">
    <h1 class="gold-heading">Add Store / Lounge / Other</h1>

    <h2 class="black-heading">Add with Google</h2>
    <gmpx-place-autocomplete
      id="address"
      placeholder="Enter address"
      apikey="YOUR_GOOGLE_API_KEY">
    </gmpx-place-autocomplete>

    <div class="form-section">
      <label>Store Name</label>
      <input type="text" id="name"/>
    </div>
    <div class="form-section">
      <label>City</label>
      <input type="text" id="city"/>
    </div>
    <div class="form-section">
      <label>Country</label>
      <input type="text" id="country"/>
    </div>
    <div class="form-section">
      <label>Phone</label>
      <input type="text" id="phone"/>
    </div>
    <div class="form-section">
      <label>Website</label>
      <input type="text" id="website"/>
    </div>

    <div class="form-section">
      <div class="radio-group">
        <label><input type="radio" name="store-type" value="store"><span class="badge store">Store</span></label>
        <label><input type="radio" name="store-type" value="lounge"><span class="badge lounge">Lounge</span></label>
        <label><input type="radio" name="store-type" value="other"><span class="badge other">Other</span></label>
      </div>
    </div>

    <h2 class="gold-heading">Rating</h2>
    <div id="rating" class="rating"></div>

    <h2 class="gold-heading">Preview</h2>
    <div id="preview"></div>

    <button id="addBtn">Add Store</button>
  </div>

  <div id="toast-container"></div>

  <!-- Supabase + app logic -->
  <script type="module">
    import { createClient } from "https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2";

    // üîë Supabase setup
    const supabase = createClient(
      "https://YOUR_PROJECT.supabase.co",
      "YOUR_PUBLIC_ANON_KEY"
    );

    // ‚≠ê Rating
    const ratingEl = document.getElementById("rating");
    let selectedRating = 0;
    for (let i = 1; i <= 5; i++) {
      const star = document.createElement("span");
      star.textContent = "‚òÖ";
      star.classList.add("star");
      star.dataset.value = i;
      star.addEventListener("mouseover", () => {
        document.querySelectorAll(".star").forEach(s => s.classList.remove("hover"));
        for (let j = 0; j < i; j++) document.querySelectorAll(".star")[j].classList.add("hover");
      });
      star.addEventListener("mouseout", () => {
        document.querySelectorAll(".star").forEach(s => s.classList.remove("hover"));
      });
      star.addEventListener("click", () => {
        selectedRating = i;
        document.querySelectorAll(".star").forEach(s => s.classList.remove("selected"));
        for (let j = 0; j < i; j++) document.querySelectorAll(".star")[j].classList.add("selected");
      });
      ratingEl.appendChild(star);
    }

    // üåç Google Autocomplete
    const autocompleteEl = document.getElementById("address");
    let selectedLat = null, selectedLng = null;

    autocompleteEl.addEventListener("gmpx-placechange", () => {
      const place = autocompleteEl.getPlace();
      if (!place) return;
      document.getElementById("name").value = place.displayName || "";
      document.getElementById("phone").value = place.formattedPhoneNumber || "";
      document.getElementById("website").value = place.websiteUri || "";

      const addressParts = place.addressComponents || [];
      const city = addressParts.find(c => c.types.includes("locality"));
      const country = addressParts.find(c => c.types.includes("country"));
      document.getElementById("city").value = city?.longText || "";
      document.getElementById("country").value = country?.longText || "";

      if (place.location) {
        selectedLat = place.location.lat();
        selectedLng = place.location.lng();
      }

      if (place.photos && place.photos.length > 0) {
        const url = place.photos[0].getURI({maxHeight:200});
        document.getElementById("preview").innerHTML = `<img src="${url}">`;
      } else {
        document.getElementById("preview").innerHTML = "";
      }
    });

    // üîò Add Store
    document.getElementById("addBtn").addEventListener("click", async () => {
      const name = document.getElementById("name").value.trim();
      const city = document.getElementById("city").value.trim();
      const country = document.getElementById("country").value.trim();
      const phone = document.getElementById("phone").value.trim();
      const website = document.getElementById("website").value.trim();
      const type = document.querySelector("input[name='store-type']:checked")?.value;
      const rating = selectedRating;

      if (!name || !city || !country || !type || rating === 0) {
        showToast("Please fill in all required fields", "error");
        return;
      }

      const { error } = await supabase.from("stores").insert([{
        name, city, country, phone, website,
        type, rating, latitude: selectedLat, longitude: selectedLng
      }]);

      if (error) {
        console.error(error);
        showToast("Error saving store", "error");
      } else {
        showToast("Store added successfully!", "success");
      }
    });

    // üîî Toast helper
    function showToast(msg, type="success") {
      const container = document.getElementById("toast-container");
      const div = document.createElement("div");
      div.className = `toast ${type}`;
      div.textContent = msg;
      container.appendChild(div);
      setTimeout(() => div.remove(), 3000);
    }
  </script>
</body>
</html>
